<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>