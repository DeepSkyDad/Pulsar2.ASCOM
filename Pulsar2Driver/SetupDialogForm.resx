<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALkAAAAxCAYAAACGTgjpAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDo4RDM2ODg4N0NCNzMxMUU1OUFEOUNEQjQ3QTBFODQyOCIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDo4RDM2ODg4OENCNzMxMUU1OUFEOUNEQjQ3QTBFODQyOCI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjhEMzY4ODg1Q0I3MzExRTU5QUQ5Q0RCNDdBMEU4
        NDI4IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjhEMzY4ODg2Q0I3MzExRTU5QUQ5Q0RCNDdBMEU4
        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
</value>
  </data>
</root>